build21
2025-10-29

/* SandTable/Renderer/VertexArray.h|cpp */

1. 实现VertexArray接口
	- virtual void Bind() const = 0;
	  virtual void Unbind() const = 0;
	  virtual void AddVertexBuffer(const std::shared_ptr<VertexBuffer>& vertexBuffer) = 0;
	  virtual void SetIndexBuffer(const std::shared_ptr<IndexBuffer>& indexBuffer) = 0;
	  virtual const std::vector<std::shared_ptr<VertexBuffer>>& GetVertexBuffers() const = 0;
	  virtual const std::shared_ptr<IndexBuffer>& GetIndexBuffer() const = 0;

	- 提供 static VertexArray::VertexArray* Create(); 来获取不同API的VertexArray。


/* Platform/OpenGL/OpenGLVertexArray.h|cpp */

2. 实现OpenGL的VertexArray特化。
	- 提供 static GLenum GetGLBaseTypeFromShaderDataType(ShaderDataType type); 通过ShaderDataType获取OpenGL基础类型。


/* SandTable/Application.h|cpp */

3. 使用 std::shared_ptr 代替 std::unique_ptr 。

4. 使用 std::shared_ptr<VertexArray> m_VertexArray 取代独立的 std::unique_ptr<VertexBuffer> m_VertexBuffer 和 std::unique_ptr<IndexBuffer> m_IndexBuffer 。

5. 使用以上新接口重写三角形渲染。

6. 添加正方形渲染。